<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <!-- To customize the asp.net core module uncomment and edit the following section. 
  For more info see https://go.microsoft.com/fwlink/?linkid=838655 -->
  <!--
  <system.webServer>
    <handlers>
      <remove name="aspNetCore"/>
      <add name="aspNetCore" path="*" verb="*" modules="AspNetCoreModule" resourceType="Unspecified"/>
    </handlers>
    <aspNetCore processPath="%LAUNCHER_PATH%" arguments="%LAUNCHER_ARGS%" stdoutLogEnabled="false" stdoutLogFile=".\logs\stdout" />
  </system.webServer>
  -->
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <!-- 
	********************************************************************** 
	IIS - Request limit
	********************************************************************** 
	-->
    <security>
      <requestFiltering>
        <!-- maxAllowedContentLength (B) must match maxRequestLength (KB) -->
        <requestLimits maxAllowedContentLength="134217728" />
      </requestFiltering>
    </security>
    <!-- 
	********************************************************************** 
	CORS - Cross-Origin Resource Sharing
	********************************************************************** 
	-->
    <httpProtocol>
      <customHeaders>
        <!-- Local CORS -->
        <add name="Access-Control-Allow-Origin" value="*" />
        <add name="Access-Control-Allow-Headers" value="Origin, X-Requested-With, Content-Type, Accept" />
        <add name="Access-Control-Allow-Credentials" value="true" />
        <add name="Vary" value="Origin" />
      </customHeaders>
    </httpProtocol>
    <rewrite>
      <outboundRules>
        <rule name="Hide Server Header">
          <match serverVariable="RESPONSE_Server" pattern=".+" />
          <action type="Rewrite" value="n/a" />
        </rule>
        <!-- Private CORS - Default -->
        <rule name="Access-Control-Allow-Origin" enabled="true" patternSyntax="Wildcard">
          <match serverVariable="RESPONSE_Access-Control-Allow-Origin" pattern="*" />
          <conditions trackAllCaptures="false"></conditions>
          <action type="Rewrite" value="{HTTP_ORIGIN}" />
        </rule>
        <!-- Private CORS - DNS filter -->
        <!--
				<rule name="WWW-Authenticate" enabled="true" patternSyntax="Wildcard">
					<match serverVariable="RESPONSE_WWW-Authenticate" pattern="*" />
					<conditions>
						<add input="{HTTP_ORIGIN}" pattern="https://domain.extension" negate="true" />
					</conditions>
					<action type="Rewrite" value="Anonymous" />
				</rule>
				-->
        <!-- Private CORS - IP filter -->
        <!--
				<rule name="WWW-Authenticate" enabled="true" patternSyntax="Wildcard">
					<match serverVariable="RESPONSE_WWW-Authenticate" pattern="*" />
					<conditions>
						<add input="{REMOTE_ADDR}" pattern="x.y.z.j" negate="true" />
					</conditions>
					<action type="Rewrite" value="Anonymous" />
				</rule>
				-->
      </outboundRules>
      <rules>
        <!-- Rule to allow api.jsonrpc URLs -->
        <rule name="AllowApiJsonRpcUrls" stopProcessing="true">
          <match url="^api\.jsonrpc(/.*)?$" />
          <action type="None" />
        </rule>
        <!-- Rule to allow api.restful URLs -->
        <rule name="AllowApiRestfulUrls" stopProcessing="true">
          <match url="^api\.restful(/.*)?$" />
          <action type="None" />
        </rule>
        <!-- Rule to allow api.static URLs -->
        <rule name="AllowApiStaticUrls" stopProcessing="true">
          <match url="^api\.static(/.*)?$" />
          <action type="None" />
        </rule>
        <rule name="Return404ForOtherRequests" stopProcessing="true">
          <match url=".*" />
          <conditions>
            <add input="{REQUEST_URI}" pattern="^/(api\.jsonrpc|api\.restful|api\.static)/" negate="true" />
          </conditions>
          <action type="CustomResponse" statusCode="404" statusReason="Not Found" statusDescription="The requested resource was not found." />
        </rule>
        <!-- This rule is for any http connection with the OPTIONS method. This connection occurs with widgets.-->
        <rule name="Return204ForOptions" stopProcessing="true">
          <match url="(.*)" />
          <conditions>
            <add input="{REQUEST_METHOD}" pattern="OPTIONS" />
          </conditions>
          <action type="CustomResponse" statusCode="204" statusReason="No Content" statusDescription="The request was for an OPTIONS method" />
          <serverVariables>
            <set name="RESPONSE_Access-Control-Allow-Methods" value="GET, POST, HEAD" />
            <set name="RESPONSE_Cache_Control" value="maxage=86400" />
          </serverVariables>
        </rule>
      </rules>
    </rewrite>
    <handlers>
      <add name="aspNetCore" path="*" verb="*" modules="AspNetCoreModuleV2" resourceType="Unspecified" />
    </handlers>
    <aspNetCore processPath="dotnet" arguments=".\PxStat.dll" stdoutLogEnabled="false" stdoutLogFile=".\logs\stdout" hostingModel="inprocess" />
  </system.webServer>
</configuration>
<!--ProjectGuid: 41c45653-c643-45b8-902d-4755a647f0fb-->