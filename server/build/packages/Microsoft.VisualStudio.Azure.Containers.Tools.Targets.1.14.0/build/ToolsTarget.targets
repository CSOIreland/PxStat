<Project>

  <PropertyGroup>
    <!--
      NOTE: The targets file was originally generated in the root project directory as the intermediate/output path
            properties are not available (in .NET Core) until after PrepareForBuild target is run, which meant that
            we could not import project files from those directories using those properties.

            See: https://github.com/dotnet/project-system/issues/3085
    -->
    <OldToolsTargetFile>$(MSBuildProjectDirectory)\.toolstarget</OldToolsTargetFile>

    <!--
      NOTE: We now use our own intermediate path as most .NET .dockerignore files ignore './obj' but some do not ignore
            './.toolstarget', which can cause recursive docker builds when building docker images.
    -->
    <ToolsTargetFile Condition="'$(ToolsTargetFile)' == ''">$(MSBuildProjectDirectory)\obj\.toolstarget</ToolsTargetFile>
  </PropertyGroup>

  <Import Project="$(OldToolsTargetFile)" Condition="Exists('$(OldToolsTargetFile)') And !Exists('$(ToolsTargetFile)')" />
  <Import Project="$(ToolsTargetFile)" Condition="Exists('$(ToolsTargetFile)')" />

  <Target Name="ExecuteToolsTarget" AfterTargets="Build" Condition="'@(ToolsTarget)' != ''">
    <CallTarget Targets="@(ToolsTarget)" />
  </Target>

</Project>
