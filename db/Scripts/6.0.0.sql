

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TS_CONFIG_SETTING_TYPE')
BEGIN
		CREATE TABLE [dbo].[TS_CONFIG_SETTING_TYPE] (
			[CST_ID]      INT             IDENTITY (1, 1) NOT NULL,
			[CST_CODE] VARCHAR(10) NOT NULL,
			[CST_VALUE] VARCHAR(200) NOT NULL, 
			PRIMARY KEY CLUSTERED ([CST_ID] ASC)
		);




		CREATE UNIQUE NONCLUSTERED INDEX [IX_UQ_TS_CONFIG_SETTING_TYPE]
			ON [dbo].[TS_CONFIG_SETTING_TYPE]([CST_CODE]);

END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TM_APP_SETTING_CONFIG_VERSION')
BEGIN
		CREATE TABLE [dbo].[TM_APP_SETTING_CONFIG_VERSION] (
			[ASV_ID]      INT             IDENTITY (1, 1) NOT NULL,
			[ASV_VERSION] DECIMAL (10, 2) NOT NULL,
			[ASV_CST_ID] INT  NOT NULL, 
			PRIMARY KEY CLUSTERED ([ASV_ID] ASC), 
			CONSTRAINT [FK_TM_APP_SETTING_CONFIG_VERSION_TS_CONFIG_SETTING_TYPE] FOREIGN KEY (ASV_CST_ID) REFERENCES [TS_CONFIG_SETTING_TYPE]([CST_ID])
		);



		CREATE UNIQUE NONCLUSTERED INDEX [IX_UQ_TM_APP_SETTING_CONFIG_VERSION]
			ON [dbo].[TM_APP_SETTING_CONFIG_VERSION]([ASV_VERSION] ASC, [ASV_CST_ID] ASC);
END
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TM_HISTORY_APP_SETTING_CONFIG_VERSION')
BEGIN

CREATE TABLE [dbo].[TM_HISTORY_APP_SETTING_CONFIG_VERSION] (
    [HSV_ID]      INT             IDENTITY (1, 1) NOT NULL,
    [HSV_VERSION] DECIMAL (10, 2) NOT NULL,
    [HSV_CST_ID] INT  NOT NULL, 
    [HSV_UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE(), 
    [HSV_UPDATED_BY] VARCHAR(256) NOT NULL DEFAULT CURRENT_USER, 
    [HSV_ASV_ID] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([HSV_ID] ASC), 
    CONSTRAINT [FK_TM_HISTORY_APP_SETTING_CONFIG_VERSION_TS_CONFIG_SETTING_TYPE] FOREIGN KEY (HSV_CST_ID) REFERENCES [TS_CONFIG_SETTING_TYPE]([CST_ID]),
    CONSTRAINT [FK_TM_HISTORY_APP_SETTING_CONFIG_VERSION_TM_APP_SETTING_CONFIG_VERSION] FOREIGN KEY (HSV_ASV_ID) REFERENCES [TM_APP_SETTING_CONFIG_VERSION]([ASV_ID]),
);

END

GO

IF EXISTS (SELECT 1 FROM sys.triggers 
           WHERE Name = 'TRIG_TM_APP_SETTING_CONFIG_VERSION_UPDATE')
BEGIN
	DROP TRIGGER TRIG_TM_APP_SETTING_CONFIG_VERSION_UPDATE
END
GO

CREATE TRIGGER TRIG_TM_APP_SETTING_CONFIG_VERSION_UPDATE
    ON TM_APP_SETTING_CONFIG_VERSION
    AFTER UPDATE
AS
BEGIN
        SET NOCOUNT ON
		
            INSERT INTO TM_HISTORY_APP_SETTING_CONFIG_VERSION
                   (
                     [HSV_VERSION], 
                     [HSV_CST_ID],
                     [HSV_ASV_ID]
                    )
            SELECT A.ASV_VERSION,A.ASV_CST_ID,A.ASV_ID
            FROM TM_APP_SETTING_CONFIG_VERSION a
		    JOIN inserted i
			    ON a.ASV_ID = i.[ASV_ID]

END
GO


IF EXISTS (SELECT 1 FROM sys.triggers 
           WHERE Name = 'TRIG_TM_APP_SETTING_CONFIG_VERSION_INSERT')
BEGIN
	DROP TRIGGER TRIG_TM_APP_SETTING_CONFIG_VERSION_INSERT
END
GO


CREATE TRIGGER TRIG_TM_APP_SETTING_CONFIG_VERSION_INSERT
    ON TM_APP_SETTING_CONFIG_VERSION
    AFTER INSERT
AS
BEGIN
        SET NOCOUNT ON

	 INSERT INTO TM_HISTORY_APP_SETTING_CONFIG_VERSION
                   (
                   [HSV_ASV_ID],
                     [HSV_VERSION], 
                     [HSV_CST_ID]
                    )
            SELECT A.ASV_ID, A.ASV_VERSION,A.ASV_CST_ID
            FROM TM_APP_SETTING_CONFIG_VERSION a
		    JOIN inserted i
			    ON a.ASV_ID = i.ASV_ID        

END


IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TM_HISTORY_APP_SETTING_CONFIG_VERSION_DEPLOY')
BEGIN

CREATE TABLE [dbo].[TM_HISTORY_APP_SETTING_CONFIG_VERSION_DEPLOY] (
    [HCD_ID]      INT             IDENTITY (1, 1) NOT NULL,
    [HCD_DEPLOYED_TIME] datetime NOT NULL  DEFAULT getdate(),  
    [HCD_HSV_ID] INT NOT NULL, 
	[HCD_IP_ADDRESS] varchar(100) NOT NULL, 
    PRIMARY KEY CLUSTERED ([HCD_ID] ASC), 
    CONSTRAINT [FK_TM_HISTORY_APP_SETTING_CONFIG_VERSION_DEPLOY_TM_HISTORY_APP_SETTING_CONFIG_VERSION] FOREIGN KEY ([HCD_HSV_ID]) REFERENCES [TM_HISTORY_APP_SETTING_CONFIG_VERSION]([HSV_ID])
);
END
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TS_API_SETTING')
BEGIN

CREATE TABLE [dbo].[TS_API_SETTING] (
    [API_ID]          INT           IDENTITY (1, 1) NOT NULL,
    [API_ASV_ID]      INT           NOT NULL,
    [API_KEY]         VARCHAR (200) NOT NULL,
    [API_VALUE]       VARCHAR (MAX) NOT NULL,
    [API_DESCRIPTION] VARCHAR (MAX) NULL,
    [API_SENSITIVE_VALUE] BIT NOT NULL DEFAULT 0, 
    PRIMARY KEY CLUSTERED ([API_ID] ASC),
    CONSTRAINT [FK_TS_API_SETTING_APP_SETTING_VERSION] FOREIGN KEY ([API_ASV_ID]) REFERENCES [dbo].[TM_APP_SETTING_CONFIG_VERSION] ([ASV_ID])
);




END
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TS_HISTORY_API_SETTING')
BEGIN

 CREATE TABLE [dbo].[TS_HISTORY_API_SETTING] (
    [HPI_ID]          INT           IDENTITY (1, 1) NOT NULL,
    [HPI_ASV_ID]      INT           NOT NULL,
    [HPI_KEY]         VARCHAR (200) NOT NULL,
    [HPI_VALUE]       VARCHAR (MAX) NOT NULL,
    [HPI_DESCRIPTION] VARCHAR (MAX) NOT NULL,
    [HPI_UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE(), 
    [HPI_UPDATED_BY] VARCHAR(256) NOT NULL DEFAULT CURRENT_USER, 
    [HPI_API_ID] INT NOT NULL, 
    PRIMARY KEY CLUSTERED ([HPI_ID] ASC),
    CONSTRAINT [FK_TS_HISTORY_API_SETTING_APP_SETTING_VERSION] FOREIGN KEY ([HPI_ASV_ID]) REFERENCES [dbo].[TM_APP_SETTING_CONFIG_VERSION] ([ASV_ID]),
    CONSTRAINT [FK_TS_HISTORY_API_SETTING_APP_SETTING] FOREIGN KEY ([HPI_API_ID]) REFERENCES [dbo].[TS_API_SETTING] ([API_ID])
);

END
GO



IF EXISTS (SELECT 1 FROM sys.triggers 
           WHERE Name = 'TRIG_TS_API_SETTING_UPDATE')
BEGIN
	DROP TRIGGER TRIG_TS_API_SETTING_UPDATE
END
GO

CREATE TRIGGER TRIG_TS_API_SETTING_UPDATE
    ON TS_API_SETTING
    AFTER UPDATE
AS
BEGIN
        SET NOCOUNT ON
		
            INSERT INTO TS_HISTORY_API_SETTING
                   (
                   [HPI_ASV_ID],
                   [HPI_KEY],        
                   [HPI_VALUE],      
                   [HPI_DESCRIPTION], 
                   [HPI_API_ID]
                   )
            SELECT a.API_ASV_ID,a.API_KEY,a.API_VALUE,a.API_DESCRIPTION,a.API_ID
            FROM TS_API_SETTING a
		    JOIN inserted i
			    ON a.API_ID = i.API_ID
END
GO

IF EXISTS (SELECT 1 FROM sys.triggers 
           WHERE Name = 'TRIG_TS_API_SETTING_INSERT')
BEGIN
	DROP TRIGGER TRIG_TS_API_SETTING_INSERT
END
GO

CREATE TRIGGER TRIG_TS_API_SETTING_INSERT
    ON TS_API_SETTING
    AFTER INSERT
AS
BEGIN
        SET NOCOUNT ON

	  INSERT INTO TS_HISTORY_API_SETTING
                   (
                   [HPI_ASV_ID],
                   [HPI_KEY],        
                   [HPI_VALUE],      
                   [HPI_DESCRIPTION], 
                   [HPI_API_ID]
                   )
            SELECT a.API_ASV_ID,a.API_KEY,a.API_VALUE,a.API_DESCRIPTION,a.API_ID
            FROM TS_API_SETTING a
		    JOIN inserted i
			    ON a.API_ID = i.API_ID    

END
GO

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TS_APP_SETTING')
BEGIN

CREATE TABLE [dbo].[TS_APP_SETTING] (
    [APP_ID]          INT           IDENTITY (1, 1) NOT NULL,
    [APP_ASV_ID]      INT           NULL,
    [APP_KEY]         VARCHAR (200) NULL,
    [APP_VALUE]       VARCHAR (MAX) NULL,
    [APP_DESCRIPTION] VARCHAR (MAX) NULL,
	[APP_SENSITIVE_VALUE] BIT NOT NULL DEFAULT 0, 
    PRIMARY KEY CLUSTERED ([APP_ID] ASC),
    CONSTRAINT [FK_TS_APP_SETTING_APP_SETTING_VERSION] FOREIGN KEY ([APP_ASV_ID]) REFERENCES [dbo].[TM_APP_SETTING_CONFIG_VERSION] ([ASV_ID])
);



CREATE UNIQUE NONCLUSTERED INDEX [IX_UQ_TS_APP_SETTING_APS_KEY]
    ON [dbo].[TS_APP_SETTING]([APP_KEY] ASC, [APP_ASV_ID] ASC);

END
 GO

 IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'TS_HISTORY_APP_SETTING')
BEGIN
 CREATE TABLE [dbo].[TS_HISTORY_APP_SETTING] (
    [HPP_ID]          INT           IDENTITY (1, 1) NOT NULL,
    [HPP_ASV_ID]      INT           NOT NULL,
    [HPP_KEY]         VARCHAR (200) NOT NULL,
    [HPP_VALUE]       VARCHAR (MAX) NOT NULL,
    [HPP_DESCRIPTION] VARCHAR (MAX) NOT NULL,
    [HPP_APP_ID] INT NOT NULL, 
    [HPP_UPDATED_AT] DATETIME NOT NULL DEFAULT GETDATE(), 
    [HPP_UPDATED_BY] VARCHAR(256) NOT NULL DEFAULT CURRENT_USER, 
    PRIMARY KEY CLUSTERED ([HPP_ID] ASC),
    CONSTRAINT [FK_TS_HISTORY_APP_SETTING_APP_SETTING_VERSION] FOREIGN KEY ([HPP_ASV_ID]) REFERENCES [dbo].[TM_APP_SETTING_CONFIG_VERSION] ([ASV_ID]),
    CONSTRAINT [FK_TS_HISTORY_APP_SETTING_APP_SETTING] FOREIGN KEY ([HPP_APP_ID]) REFERENCES [dbo].[TS_APP_SETTING] ([APP_ID])
);

END
GO

IF EXISTS (SELECT 1 FROM sys.triggers 
           WHERE Name = 'TRIG_TS_APP_SETTING_UPDATE')
BEGIN
	DROP TRIGGER TRIG_TS_APP_SETTING_UPDATE
END
GO

CREATE TRIGGER TRIG_TS_APP_SETTING_UPDATE
    ON TS_APP_SETTING
    AFTER UPDATE
AS
BEGIN
        SET NOCOUNT ON
		
            INSERT INTO TS_HISTORY_APP_SETTING
                   (
                   [HPP_ASV_ID],
                   [HPP_KEY],        
                   [HPP_VALUE],      
                   [HPP_DESCRIPTION], 
                   [HPP_APP_ID]
                   )
            SELECT a.APP_ASV_ID,a.APP_KEY,a.APP_VALUE,a.APP_DESCRIPTION,a.APP_ID
            FROM TS_APP_SETTING a
		    JOIN inserted i
			    ON a.APP_ID = i.APP_ID
END
GO

IF EXISTS (SELECT 1 FROM sys.triggers 
           WHERE Name = 'TRIG_TS_APP_SETTING_INSERT')
BEGIN
	DROP TRIGGER TRIG_TS_APP_SETTING_INSERT
END
GO

CREATE TRIGGER TRIG_TS_APP_SETTING_INSERT
    ON TS_APP_SETTING
    AFTER INSERT
AS
BEGIN
        SET NOCOUNT ON

	  INSERT INTO TS_HISTORY_APP_SETTING
                   (
                   [HPP_ASV_ID],
                   [HPP_KEY],        
                   [HPP_VALUE],      
                   [HPP_DESCRIPTION], 
                   [HPP_APP_ID]
                   )
            SELECT a.APP_ASV_ID,a.APP_KEY,a.APP_VALUE,a.APP_DESCRIPTION,a.APP_ID
            FROM TS_APP_SETTING a
		    JOIN inserted i
			    ON a.APP_ID = i.APP_ID    

END

GO

IF NOT EXISTS
(SELECT 1
FROM TS_CONFIG_SETTING_TYPE
WHERE CST_CODE = 'API')
INSERT INTO TS_CONFIG_SETTING_TYPE VALUES('API','API CONFIG');

IF NOT EXISTS
(SELECT 1
FROM TS_CONFIG_SETTING_TYPE
WHERE CST_CODE = 'APP')
INSERT INTO TS_CONFIG_SETTING_TYPE VALUES('APP','APPPLICATION_CONFIG');

IF NOT EXISTS
(SELECT 1
FROM TM_APP_SETTING_CONFIG_VERSION
join TS_CONFIG_SETTING_TYPE on ASV_CST_ID = CST_ID where CST_CODE = 'API')
INSERT INTO TM_APP_SETTING_CONFIG_VERSION
SELECT 1.0,CST_ID FROM TS_CONFIG_SETTING_TYPE WHERE CST_CODE = 'API';

IF NOT EXISTS
(SELECT 1
FROM TM_APP_SETTING_CONFIG_VERSION
join TS_CONFIG_SETTING_TYPE on ASV_CST_ID = CST_ID where CST_CODE = 'APP')
INSERT INTO TM_APP_SETTING_CONFIG_VERSION
SELECT 1.0,CST_ID FROM TS_CONFIG_SETTING_TYPE WHERE CST_CODE = 'APP';


if(select count(*) from sys.indexes
where name = 'IX_UQ_TS_API_SETTING_HPI_KEY')>0
begin
	drop index IX_UQ_TS_API_SETTING_HPI_KEY on TS_HISTORY_API_SETTING
end

ALTER TABLE TD_LOGGING 
ADD LGG_MACHINENAME NVARCHAR(MAX) NULL

ALTER TABLE TD_LOGGING
ADD LGG_CORRELATION_ID VARCHAR(MAX) NULL

CREATE TABLE [dbo].[TD_API_TRACE](
	[TRC_ID] [int] IDENTITY(1,1) NOT NULL,
	[TRC_METHOD] [varchar](256) NULL,
	[TRC_PARAMS] [nvarchar](2048) NULL,
	[TRC_IP] [varchar](15) NULL,
	[TRC_USERAGENT] [varchar](2048) NULL,
	[TRC_USERNAME] [nvarchar](256) NULL,
	[TRC_DATETIME] [datetime] NOT NULL,
	[TRC_STARTTIME] [datetime] NOT NULL,
	[TRC_DURATION] [decimal](18, 3) NOT NULL,
	[TRC_STATUSCODE] [int] NOT NULL,
	[TRC_MACHINENAME] [varchar](256) NOT NULL,
	[TRC_REQUEST_TYPE] [varchar](50) NOT NULL,
	[TRC_REQUEST_VERB] [varchar](50) NOT NULL,
	[TRC_ERROR_PATH] [varchar](1024) NULL,
PRIMARY KEY CLUSTERED 
(
	[TRC_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
